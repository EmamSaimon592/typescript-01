‚úÖ generic function with Array

function getFirstElement<T>(arr: T[]): T {
  return arr[0];
}

const firstNum = getFirstElement<number>([10, 20, 30]); // 10
const firstStr = getFirstElement(['a', 'b', 'c']); // "a"

console.log(firstNum);
console.log(firstStr);

....................................

‚úÖ Aysnc function in ts
async function getData(): Promise<string> {
  throw new Error("Something went wrong!");
}

üî∏ getData() ‡¶π‡¶≤ ‡¶è‡¶ï‡¶ü‡¶æ async function‡•§
üî∏ ‡¶ï‡¶ø‡¶®‡ßç‡¶§‡ßÅ ‡¶è‡¶ü‡¶æ ‡¶ï‡ßã‡¶® data return ‡¶®‡¶æ ‡¶ï‡¶∞‡ßá, ‡¶¨‡¶∞‡¶Ç error ‡¶õ‡ßÅ‡¶Å‡ßú‡ßá ‡¶¶‡ßá‡ßü (throw)‡•§

async function run() {
  try {
    const data = await getData();  // ‡¶è‡¶ñ‡¶æ‡¶®‡ßá error ‡¶π‡¶¨‡ßá
    console.log(data);
  } catch (error) {
    console.error("Error:", (error as Error).message); // error message ‡¶¶‡ßá‡¶ñ‡¶æ‡¶¨‡ßá
  }
}

üî∏ run() ‡¶´‡¶æ‡¶Ç‡¶∂‡¶® getData()-‡¶ï‡ßá ‡¶ï‡¶≤ ‡¶ï‡¶∞‡ßá await ‡¶¶‡¶ø‡ßü‡ßá‡•§
üî∏ ‡¶Ø‡ßá‡¶π‡ßá‡¶§‡ßÅ getData() error ‡¶¶‡ßá‡ßü, ‡¶§‡¶æ‡¶á try block ‡¶è ‡¶®‡¶æ ‡¶ó‡¶ø‡ßü‡ßá catch block-‡¶è ‡¶ö‡¶≤‡ßá ‡¶Ø‡¶æ‡ßü‡•§
üî∏ catch block ‡¶è ‡¶∏‡ßá‡¶á error message ‡¶¶‡ßá‡¶ñ‡¶æ‡¶®‡ßã ‡¶π‡ßü‡•§

 ‡¶Ø‡¶¶‡¶ø Error ‡¶®‡¶æ ‡¶¶‡¶ø‡¶§‡¶æ‡¶Æ?
async function getData(): Promise<string> {
  return "Hello world!";
}
‡¶§‡¶æ‡¶π‡¶≤‡ßá output ‡¶π‡¶§:
Hello world!
------------------------------------------------------------

